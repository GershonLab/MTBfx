{
 "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/akaat/MTBfx/blob/K1off/JSONschema/sharedSchema_option2.json",
  "title": "A Schema of MTB Shared Elements",
  "description": "Mobile Toolbox has task-specific data export formats (i.e. schemas) for the taskData. Although there are several task-specific components, there are a large number of shared elements across tasks. This schema documents the shared elements common to multiple tasks to which each can point for a composite JSON draft 7 schema",
  "type": "object",
  "additionalProperties": false,
  "definitions":{
    "taskRunUUID":{
      "type": "string",
	    "format": "uuid",
	    "description": "This is a global identifier"
	  },
	  "testVersion": {
	    "description": "The version of MFS administered in this record. Note that this is a number stored as a string",
      "type": "string"
	  },
	  "timemarks":{
      "type": "string",
      "format": "date-time",
      "description": "The timestamp when an event occurred, following ISO 8601 formatting conventions"
    },
    "taskStatus":{
	    "type": "array",
	    "description": "completion status for the task.",
	    "maxItems": 1,
	    "items":[
	      {"type":"string"},
	      {"enum": ["complete","willNotComplete","partiallyComplete"]}
	    ]
	  },
	  "locale":{
	    "type": "string",
	    "description": "localization for the phone on which the task was administered - note that this is metadata passed by the app and thus not enumerated herein",
	    "default": "en-us"
	  },
	  "userInteractions":{
	    "type": "array",
	    "description": "List validation for user interactions. This records screen progression, UI events, and button actions on a step-by-step basis",
	    "items":{
	      "anyOf": [
	        {
	          "type": "object",
	          "description": "Standard user interactions for most measures",
	          "properties":{
	            "stepIdentifier":{
	              "type": "string",
	              "description": "This is the `stepIdentifier`, and should be redundant with `identifier` used in  `steps` and `stepHistory` elements"
	            },
	            "responseTime": {"$ref": "#/definitions/responseTime"},
	            "timestamp": {"$ref": "#/definitions/timemarks"},
	            "value": {
	              "type": "string",
	              "description" : "The button touched on the screen, used optionally for some measures."
	            },
	            "controlEvent":{
	              "type": "array",
	              "maxItems": 1,
	              "description": "The type of interaction being recorded",
	              "items":[
	                {"type": "string"},
	                {"enum": ["stepBegins","interrupted","resumed","uiEnabled","touchDown","touchUpInside","touchUpOutside","keypress","setSelection"]}
	                ]
	            },
	            "userInteractionIdentifier":{
	              "type": "string",
	              "description": "This was formerly called `identifier`, but has been renamed for clarity. It is the UI element with which the person is interacting."
	            }
	          },
	          "additionalProperties": false,
	          "required": ["stepIdentifier","timestamp","controlEvent","userInteractionIdentifier"]
	        },
	        {
	          "type": "object",
	          "description": "Interactions for Picture Sequence Memory, which includes additional fields.",
	          "properties":{
	            "stepIdentifier":{
	              "type": "string",
	              "description": "This is the `stepIdentifier`, and should be redundant with `identifier` used in  `steps` and `stepHistory` elements. FOR PICTURE SEQUENCE MEMORY, this is an individual image on the screen, not the screen name as a whole."
	            },
	            "timestamp": {"$ref": "#/definitions/timemarks"},
	            "controlEvent":{
	              "type": "array",
	              "maxItems": 1,
	              "description": "The type of interaction being recorded",
	              "items":[
	                {"type": "string"},
	                {"enum": ["stepBegins","interrupted","resumed","uiEnabled","touchDown","touchUpInside","touchUpOutside","keypress","setSelection"]}
	              ]
	            },
	            "userInteractionIdentifier":{
	              "type": "string",
	              "description": "This was formerly called `identifier`, but has been renamed for clarity. It is the UI element with which the person is interacting."
	            },
	            "parent":{
	              "type": "string",
	              "description": "This field is used for on the Picture Sequence Memory task. On this task, the `stepIdentifier` is the element on the screen which the examinee is moving (i.e., a unique picture). The `parent` is the screen zone in which the control event occurs."
	            },
	            "parentStepIdentifier":{
	              "type": "string",
	              "description": "This is identical to the  `parentStepIdentifier` used in `steps` and `stepHistory` elements. This is what would typically be viewed as a 'step', but since Picture Sequence Memory treats each image as a step with multiple steps on the screen this field is used to group together relevant images that are on the screen at the same time."
	            }
	          },
	          "additionalProperties": false,
	          "required": ["stepIdentifier","timestamp","controlEvent","userInteractionIdentifier","parent","parentStepIdentifier"]
	        }
	      ]
	    }
	  },
	  "itemScore": {
	    "type": "integer",
	    "default": 1,
	    "minimum": 0,
	    "maximum": 1,
	    "description": "The score is an indicator for whether an item is correct and thus scored as 1 or incorrect and scored as 0."
	  },
	  "responseTime":{
	    "type": "number",
	    "default": 0,
	    "minimum": 0,
	    "description": "Time, in milliseconds, for a response to occur"
	  },
	  "practice": {
	    "type": "boolean",
	    "default": false,
	    "description": "An indicator for whether this item is a practice item [TRUE] or a live item [FALSE]."
	  },
	  "instructions": {
	    "type": "boolean",
	    "default": false,
	    "description": "An indicator for whether this item is an instructional item [TRUE] or a practice or live item [FALSE]."
	  },
	  "wasInterrupted": {
	    "type": "boolean",
	    "default": false,
	    "description": "An indicator for whether an interruption occurred on this item."
	  },
	  "scores": {
	    "type": "object",
	    "description": "This is a series of key-value pairs for scores calculated on-device. These are task-specific and as such not specified herein (or at least not yet)."
	  },
	  "schemaIdentifier":{
	    "type": "string",
	    "description": "this is the identifier for the unique schema. It is currently an array with length one, but will eventually be a hyperlink stored as a string, which points to the relevant JSON schema.",
	    "$comment": "This will eventually be enumerated for the relevant URLs."
	  },
	  "consideredSteps":{
	    "type": "array",
	    "description": "This is used for the dichotomous test engine as part of the exposure control mechanism.",
	    "items":[
	      {
	        "type": "object",
	        "properties":{
	          "stepIdentifier":{
	            "type": "string",
	            "description": "This is the `stepIdentifier`, and should be redundant with `identifier` used in  `steps` and `stepHistory` elements"
	          },
	          "randomNumber":{
	            "type": "number",
	            "minimum": 0,
	            "maximum": 1,
	            "description": "This value is drawn from a random number generator to determine if an item should be exposed or not."
	          },
	          "exposure":{
	            "type": "number",
	            "minimum": 0,
	            "maximum": 1,
	            "description": "This is the conditional or unconditional exposure control value that is item-specific (and potentially specific to the order of previously-administered items in this administration). It is a value between 0 and 1, and is compared to the randomNumber to determine if an item should be shown to a participant."
	          },
	          "administered":{
	            "type": "boolean",
	            "default": true,
	            "description": "If the item is presented to a participant, this is set to TRUE; if the exposure value is less than the random number, then this is set to FALSE and the next item is considered for administration."
	          }
	        }
	      }
	    ]
	  },
	  "administeredSteps":{
	    "type": "array",
	    "description": "This is used in the dichotomous engine. It is largely redundant with `steps` and `stepHistory` and is not used elsewhere in the exports. It does include a `response` field, which varies by measure type, but it is not specified herein due to the redundancies.",
	    "additionalItems": false,
	    "items":[
	      {
	      "anyOf": [
	        {
	        "type": "object",
	        "description": "A record for each item administered in this assessment using the dichotomous engine.",
	        "properties":{
	          "type":{
	            "type": "string",
	            "description": "The type of result this is",
	            "examples":["spellingStepresult","mfsStepResult","mssStepResult"]
	            },
	            "stepIdentifier": {
	              "type": "string",
	              "description": "This is the stepID, and should be redundant with `stepIdentifier` used in  `userInteractions` and the `identifier` used in `steps` and `stepHistory` elements."
	            },
	            "startDate": {"$ref": "#/definitions/timemarks"},
	            "endDate": {"$ref": "#/definitions/timemarks"},
	            "practice": {"$ref": "#/definitions/practice"},
	            "wasInterrupted": {"$ref": "#/definitions/wasInterrupted"},
	            "score": {"$ref": "#/definitions/itemScore"},
	            "position":{
	              "type": "integer",
	              "minimum": 1,
	              "description": "The order of screen/step progression for this administration"
	            },
	            "theta":{
	              "type": "number",
	              "default": 0,
	              "description": "This is the theta value AFTER administering this step."
	            },
	            "se":{
	              "type": "number",
	              "description": "This is the standard error associated with the theta estimate AFTER administering this step. The default value is the starting value that initializes the dichotomous engine. It must be positive.",
	              "default": 99,
	              "exclusiveMinimum": 0.0
	            }
	          },
	          "additionalProperties": true
	      }
	      ]
	  }
	      ]
	  }
  }
}
